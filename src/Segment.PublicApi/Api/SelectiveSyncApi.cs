/*
 * Segment Public API
 *
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API. 
 *
 * The version of the OpenAPI document: 60.0.0
 * Contact: friends@segment.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Segment.PublicApi.Client;
using Segment.PublicApi.Model;

namespace Segment.PublicApi.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISelectiveSyncApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get Advanced Sync Schedule from Warehouse
        /// </summary>
        /// <remarks>
        /// Returns the advanced sync schedule for a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetAdvancedSyncScheduleFromWarehouse200Response</returns>
        GetAdvancedSyncScheduleFromWarehouse200Response GetAdvancedSyncScheduleFromWarehouse(string warehouseId, int operationIndex = 0);

        /// <summary>
        /// Get Advanced Sync Schedule from Warehouse
        /// </summary>
        /// <remarks>
        /// Returns the advanced sync schedule for a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetAdvancedSyncScheduleFromWarehouse200Response</returns>
        ApiResponse<GetAdvancedSyncScheduleFromWarehouse200Response> GetAdvancedSyncScheduleFromWarehouseWithHttpInfo(string warehouseId, int operationIndex = 0);
        /// <summary>
        /// List Selective Syncs from Warehouse And Source
        /// </summary>
        /// <remarks>
        /// Returns the schema for a Warehouse, including Sources, Collections, and Properties.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ListSelectiveSyncsFromWarehouseAndSource200Response</returns>
        ListSelectiveSyncsFromWarehouseAndSource200Response ListSelectiveSyncsFromWarehouseAndSource(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0);

        /// <summary>
        /// List Selective Syncs from Warehouse And Source
        /// </summary>
        /// <remarks>
        /// Returns the schema for a Warehouse, including Sources, Collections, and Properties.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ListSelectiveSyncsFromWarehouseAndSource200Response</returns>
        ApiResponse<ListSelectiveSyncsFromWarehouseAndSource200Response> ListSelectiveSyncsFromWarehouseAndSourceWithHttpInfo(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0);
        /// <summary>
        /// List Syncs from Warehouse
        /// </summary>
        /// <remarks>
        /// Returns the overview of syncs for every Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ListSyncsFromWarehouse200Response</returns>
        ListSyncsFromWarehouse200Response ListSyncsFromWarehouse(string warehouseId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0);

        /// <summary>
        /// List Syncs from Warehouse
        /// </summary>
        /// <remarks>
        /// Returns the overview of syncs for every Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ListSyncsFromWarehouse200Response</returns>
        ApiResponse<ListSyncsFromWarehouse200Response> ListSyncsFromWarehouseWithHttpInfo(string warehouseId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0);
        /// <summary>
        /// List Syncs from Warehouse And Source
        /// </summary>
        /// <remarks>
        /// Returns the overview of syncs for a Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ListSyncsFromWarehouseAndSource200Response</returns>
        ListSyncsFromWarehouseAndSource200Response ListSyncsFromWarehouseAndSource(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0);

        /// <summary>
        /// List Syncs from Warehouse And Source
        /// </summary>
        /// <remarks>
        /// Returns the overview of syncs for a Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ListSyncsFromWarehouseAndSource200Response</returns>
        ApiResponse<ListSyncsFromWarehouseAndSource200Response> ListSyncsFromWarehouseAndSourceWithHttpInfo(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0);
        /// <summary>
        /// Replace Advanced Sync Schedule for Warehouse
        /// </summary>
        /// <remarks>
        /// Updates the advanced sync schedule for a Warehouse, replacing the sync schedule with a new schedule.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="replaceAdvancedSyncScheduleForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ReplaceAdvancedSyncScheduleForWarehouse200Response</returns>
        ReplaceAdvancedSyncScheduleForWarehouse200Response ReplaceAdvancedSyncScheduleForWarehouse(string warehouseId, ReplaceAdvancedSyncScheduleForWarehouseV1Input replaceAdvancedSyncScheduleForWarehouseV1Input, int operationIndex = 0);

        /// <summary>
        /// Replace Advanced Sync Schedule for Warehouse
        /// </summary>
        /// <remarks>
        /// Updates the advanced sync schedule for a Warehouse, replacing the sync schedule with a new schedule.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="replaceAdvancedSyncScheduleForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ReplaceAdvancedSyncScheduleForWarehouse200Response</returns>
        ApiResponse<ReplaceAdvancedSyncScheduleForWarehouse200Response> ReplaceAdvancedSyncScheduleForWarehouseWithHttpInfo(string warehouseId, ReplaceAdvancedSyncScheduleForWarehouseV1Input replaceAdvancedSyncScheduleForWarehouseV1Input, int operationIndex = 0);
        /// <summary>
        /// Update Selective Sync for Warehouse
        /// </summary>
        /// <remarks>
        /// Configures the schema for a Warehouse, including Sources, Collections, and Properties.    • When called, this endpoint may generate the &#x60;Storage Destination Modified&#x60; event in the [audit trail](/tag/Audit-Trail).          The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="updateSelectiveSyncForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>UpdateSelectiveSyncForWarehouse200Response</returns>
        UpdateSelectiveSyncForWarehouse200Response UpdateSelectiveSyncForWarehouse(string warehouseId, UpdateSelectiveSyncForWarehouseV1Input updateSelectiveSyncForWarehouseV1Input, int operationIndex = 0);

        /// <summary>
        /// Update Selective Sync for Warehouse
        /// </summary>
        /// <remarks>
        /// Configures the schema for a Warehouse, including Sources, Collections, and Properties.    • When called, this endpoint may generate the &#x60;Storage Destination Modified&#x60; event in the [audit trail](/tag/Audit-Trail).          The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="updateSelectiveSyncForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of UpdateSelectiveSyncForWarehouse200Response</returns>
        ApiResponse<UpdateSelectiveSyncForWarehouse200Response> UpdateSelectiveSyncForWarehouseWithHttpInfo(string warehouseId, UpdateSelectiveSyncForWarehouseV1Input updateSelectiveSyncForWarehouseV1Input, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISelectiveSyncApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Get Advanced Sync Schedule from Warehouse
        /// </summary>
        /// <remarks>
        /// Returns the advanced sync schedule for a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetAdvancedSyncScheduleFromWarehouse200Response</returns>
        System.Threading.Tasks.Task<GetAdvancedSyncScheduleFromWarehouse200Response> GetAdvancedSyncScheduleFromWarehouseAsync(string warehouseId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get Advanced Sync Schedule from Warehouse
        /// </summary>
        /// <remarks>
        /// Returns the advanced sync schedule for a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetAdvancedSyncScheduleFromWarehouse200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<GetAdvancedSyncScheduleFromWarehouse200Response>> GetAdvancedSyncScheduleFromWarehouseWithHttpInfoAsync(string warehouseId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// List Selective Syncs from Warehouse And Source
        /// </summary>
        /// <remarks>
        /// Returns the schema for a Warehouse, including Sources, Collections, and Properties.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ListSelectiveSyncsFromWarehouseAndSource200Response</returns>
        System.Threading.Tasks.Task<ListSelectiveSyncsFromWarehouseAndSource200Response> ListSelectiveSyncsFromWarehouseAndSourceAsync(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// List Selective Syncs from Warehouse And Source
        /// </summary>
        /// <remarks>
        /// Returns the schema for a Warehouse, including Sources, Collections, and Properties.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ListSelectiveSyncsFromWarehouseAndSource200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ListSelectiveSyncsFromWarehouseAndSource200Response>> ListSelectiveSyncsFromWarehouseAndSourceWithHttpInfoAsync(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// List Syncs from Warehouse
        /// </summary>
        /// <remarks>
        /// Returns the overview of syncs for every Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ListSyncsFromWarehouse200Response</returns>
        System.Threading.Tasks.Task<ListSyncsFromWarehouse200Response> ListSyncsFromWarehouseAsync(string warehouseId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// List Syncs from Warehouse
        /// </summary>
        /// <remarks>
        /// Returns the overview of syncs for every Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ListSyncsFromWarehouse200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ListSyncsFromWarehouse200Response>> ListSyncsFromWarehouseWithHttpInfoAsync(string warehouseId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// List Syncs from Warehouse And Source
        /// </summary>
        /// <remarks>
        /// Returns the overview of syncs for a Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ListSyncsFromWarehouseAndSource200Response</returns>
        System.Threading.Tasks.Task<ListSyncsFromWarehouseAndSource200Response> ListSyncsFromWarehouseAndSourceAsync(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// List Syncs from Warehouse And Source
        /// </summary>
        /// <remarks>
        /// Returns the overview of syncs for a Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ListSyncsFromWarehouseAndSource200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ListSyncsFromWarehouseAndSource200Response>> ListSyncsFromWarehouseAndSourceWithHttpInfoAsync(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Replace Advanced Sync Schedule for Warehouse
        /// </summary>
        /// <remarks>
        /// Updates the advanced sync schedule for a Warehouse, replacing the sync schedule with a new schedule.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="replaceAdvancedSyncScheduleForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ReplaceAdvancedSyncScheduleForWarehouse200Response</returns>
        System.Threading.Tasks.Task<ReplaceAdvancedSyncScheduleForWarehouse200Response> ReplaceAdvancedSyncScheduleForWarehouseAsync(string warehouseId, ReplaceAdvancedSyncScheduleForWarehouseV1Input replaceAdvancedSyncScheduleForWarehouseV1Input, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Replace Advanced Sync Schedule for Warehouse
        /// </summary>
        /// <remarks>
        /// Updates the advanced sync schedule for a Warehouse, replacing the sync schedule with a new schedule.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="replaceAdvancedSyncScheduleForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ReplaceAdvancedSyncScheduleForWarehouse200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ReplaceAdvancedSyncScheduleForWarehouse200Response>> ReplaceAdvancedSyncScheduleForWarehouseWithHttpInfoAsync(string warehouseId, ReplaceAdvancedSyncScheduleForWarehouseV1Input replaceAdvancedSyncScheduleForWarehouseV1Input, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Selective Sync for Warehouse
        /// </summary>
        /// <remarks>
        /// Configures the schema for a Warehouse, including Sources, Collections, and Properties.    • When called, this endpoint may generate the &#x60;Storage Destination Modified&#x60; event in the [audit trail](/tag/Audit-Trail).          The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="updateSelectiveSyncForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of UpdateSelectiveSyncForWarehouse200Response</returns>
        System.Threading.Tasks.Task<UpdateSelectiveSyncForWarehouse200Response> UpdateSelectiveSyncForWarehouseAsync(string warehouseId, UpdateSelectiveSyncForWarehouseV1Input updateSelectiveSyncForWarehouseV1Input, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Update Selective Sync for Warehouse
        /// </summary>
        /// <remarks>
        /// Configures the schema for a Warehouse, including Sources, Collections, and Properties.    • When called, this endpoint may generate the &#x60;Storage Destination Modified&#x60; event in the [audit trail](/tag/Audit-Trail).          The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </remarks>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="updateSelectiveSyncForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (UpdateSelectiveSyncForWarehouse200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<UpdateSelectiveSyncForWarehouse200Response>> UpdateSelectiveSyncForWarehouseWithHttpInfoAsync(string warehouseId, UpdateSelectiveSyncForWarehouseV1Input updateSelectiveSyncForWarehouseV1Input, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISelectiveSyncApi : ISelectiveSyncApiSync, ISelectiveSyncApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class SelectiveSyncApi : ISelectiveSyncApi
    {
        private Segment.PublicApi.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="SelectiveSyncApi"/> class.
        /// </summary>
        /// <returns></returns>
        public SelectiveSyncApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SelectiveSyncApi"/> class.
        /// </summary>
        /// <returns></returns>
        public SelectiveSyncApi(string basePath)
        {
            this.Configuration = Segment.PublicApi.Client.Configuration.MergeConfigurations(
                Segment.PublicApi.Client.GlobalConfiguration.Instance,
                new Segment.PublicApi.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Segment.PublicApi.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Segment.PublicApi.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Segment.PublicApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SelectiveSyncApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public SelectiveSyncApi(Segment.PublicApi.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Segment.PublicApi.Client.Configuration.MergeConfigurations(
                Segment.PublicApi.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Segment.PublicApi.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Segment.PublicApi.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Segment.PublicApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SelectiveSyncApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public SelectiveSyncApi(Segment.PublicApi.Client.ISynchronousClient client, Segment.PublicApi.Client.IAsynchronousClient asyncClient, Segment.PublicApi.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Segment.PublicApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Segment.PublicApi.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Segment.PublicApi.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Segment.PublicApi.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Segment.PublicApi.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Get Advanced Sync Schedule from Warehouse Returns the advanced sync schedule for a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetAdvancedSyncScheduleFromWarehouse200Response</returns>
        public GetAdvancedSyncScheduleFromWarehouse200Response GetAdvancedSyncScheduleFromWarehouse(string warehouseId, int operationIndex = 0)
        {
            Segment.PublicApi.Client.ApiResponse<GetAdvancedSyncScheduleFromWarehouse200Response> localVarResponse = GetAdvancedSyncScheduleFromWarehouseWithHttpInfo(warehouseId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Advanced Sync Schedule from Warehouse Returns the advanced sync schedule for a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetAdvancedSyncScheduleFromWarehouse200Response</returns>
        public Segment.PublicApi.Client.ApiResponse<GetAdvancedSyncScheduleFromWarehouse200Response> GetAdvancedSyncScheduleFromWarehouseWithHttpInfo(string warehouseId, int operationIndex = 0)
        {
            // verify the required parameter 'warehouseId' is set
            if (warehouseId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'warehouseId' when calling SelectiveSyncApi->GetAdvancedSyncScheduleFromWarehouse");
            }

            Segment.PublicApi.Client.RequestOptions localVarRequestOptions = new Segment.PublicApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.segment.v1+json",
                "application/json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            var localVarContentType = Segment.PublicApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Segment.PublicApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Segment.PublicApi.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter

            localVarRequestOptions.Operation = "SelectiveSyncApi.GetAdvancedSyncScheduleFromWarehouse";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<GetAdvancedSyncScheduleFromWarehouse200Response>("/warehouses/{warehouseId}/advanced-sync-schedule", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetAdvancedSyncScheduleFromWarehouse", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Advanced Sync Schedule from Warehouse Returns the advanced sync schedule for a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetAdvancedSyncScheduleFromWarehouse200Response</returns>
        public async System.Threading.Tasks.Task<GetAdvancedSyncScheduleFromWarehouse200Response> GetAdvancedSyncScheduleFromWarehouseAsync(string warehouseId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Segment.PublicApi.Client.ApiResponse<GetAdvancedSyncScheduleFromWarehouse200Response> localVarResponse = await GetAdvancedSyncScheduleFromWarehouseWithHttpInfoAsync(warehouseId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Advanced Sync Schedule from Warehouse Returns the advanced sync schedule for a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetAdvancedSyncScheduleFromWarehouse200Response)</returns>
        public async System.Threading.Tasks.Task<Segment.PublicApi.Client.ApiResponse<GetAdvancedSyncScheduleFromWarehouse200Response>> GetAdvancedSyncScheduleFromWarehouseWithHttpInfoAsync(string warehouseId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'warehouseId' is set
            if (warehouseId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'warehouseId' when calling SelectiveSyncApi->GetAdvancedSyncScheduleFromWarehouse");
            }


            Segment.PublicApi.Client.RequestOptions localVarRequestOptions = new Segment.PublicApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.segment.v1+json",
                "application/json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            var localVarContentType = Segment.PublicApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Segment.PublicApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Segment.PublicApi.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter

            localVarRequestOptions.Operation = "SelectiveSyncApi.GetAdvancedSyncScheduleFromWarehouse";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<GetAdvancedSyncScheduleFromWarehouse200Response>("/warehouses/{warehouseId}/advanced-sync-schedule", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetAdvancedSyncScheduleFromWarehouse", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// List Selective Syncs from Warehouse And Source Returns the schema for a Warehouse, including Sources, Collections, and Properties.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ListSelectiveSyncsFromWarehouseAndSource200Response</returns>
        public ListSelectiveSyncsFromWarehouseAndSource200Response ListSelectiveSyncsFromWarehouseAndSource(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0)
        {
            Segment.PublicApi.Client.ApiResponse<ListSelectiveSyncsFromWarehouseAndSource200Response> localVarResponse = ListSelectiveSyncsFromWarehouseAndSourceWithHttpInfo(warehouseId, sourceId, pagination);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List Selective Syncs from Warehouse And Source Returns the schema for a Warehouse, including Sources, Collections, and Properties.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ListSelectiveSyncsFromWarehouseAndSource200Response</returns>
        public Segment.PublicApi.Client.ApiResponse<ListSelectiveSyncsFromWarehouseAndSource200Response> ListSelectiveSyncsFromWarehouseAndSourceWithHttpInfo(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0)
        {
            // verify the required parameter 'warehouseId' is set
            if (warehouseId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'warehouseId' when calling SelectiveSyncApi->ListSelectiveSyncsFromWarehouseAndSource");
            }

            // verify the required parameter 'sourceId' is set
            if (sourceId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'sourceId' when calling SelectiveSyncApi->ListSelectiveSyncsFromWarehouseAndSource");
            }

            Segment.PublicApi.Client.RequestOptions localVarRequestOptions = new Segment.PublicApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.segment.v1+json",
                "application/json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            var localVarContentType = Segment.PublicApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Segment.PublicApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Segment.PublicApi.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.PathParameters.Add("sourceId", Segment.PublicApi.Client.ClientUtils.ParameterToString(sourceId)); // path parameter
            if (pagination != null)
            {
                localVarRequestOptions.QueryParameters.Add(Segment.PublicApi.Client.ClientUtils.ParameterToMultiMap("", "pagination", pagination));
            }

            localVarRequestOptions.Operation = "SelectiveSyncApi.ListSelectiveSyncsFromWarehouseAndSource";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ListSelectiveSyncsFromWarehouseAndSource200Response>("/warehouses/{warehouseId}/connected-sources/{sourceId}/selective-syncs", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListSelectiveSyncsFromWarehouseAndSource", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// List Selective Syncs from Warehouse And Source Returns the schema for a Warehouse, including Sources, Collections, and Properties.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ListSelectiveSyncsFromWarehouseAndSource200Response</returns>
        public async System.Threading.Tasks.Task<ListSelectiveSyncsFromWarehouseAndSource200Response> ListSelectiveSyncsFromWarehouseAndSourceAsync(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Segment.PublicApi.Client.ApiResponse<ListSelectiveSyncsFromWarehouseAndSource200Response> localVarResponse = await ListSelectiveSyncsFromWarehouseAndSourceWithHttpInfoAsync(warehouseId, sourceId, pagination, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List Selective Syncs from Warehouse And Source Returns the schema for a Warehouse, including Sources, Collections, and Properties.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ListSelectiveSyncsFromWarehouseAndSource200Response)</returns>
        public async System.Threading.Tasks.Task<Segment.PublicApi.Client.ApiResponse<ListSelectiveSyncsFromWarehouseAndSource200Response>> ListSelectiveSyncsFromWarehouseAndSourceWithHttpInfoAsync(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'warehouseId' is set
            if (warehouseId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'warehouseId' when calling SelectiveSyncApi->ListSelectiveSyncsFromWarehouseAndSource");
            }

            // verify the required parameter 'sourceId' is set
            if (sourceId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'sourceId' when calling SelectiveSyncApi->ListSelectiveSyncsFromWarehouseAndSource");
            }


            Segment.PublicApi.Client.RequestOptions localVarRequestOptions = new Segment.PublicApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.segment.v1+json",
                "application/json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            var localVarContentType = Segment.PublicApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Segment.PublicApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Segment.PublicApi.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.PathParameters.Add("sourceId", Segment.PublicApi.Client.ClientUtils.ParameterToString(sourceId)); // path parameter
            if (pagination != null)
            {
                localVarRequestOptions.QueryParameters.Add(Segment.PublicApi.Client.ClientUtils.ParameterToMultiMap("", "pagination", pagination));
            }

            localVarRequestOptions.Operation = "SelectiveSyncApi.ListSelectiveSyncsFromWarehouseAndSource";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ListSelectiveSyncsFromWarehouseAndSource200Response>("/warehouses/{warehouseId}/connected-sources/{sourceId}/selective-syncs", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListSelectiveSyncsFromWarehouseAndSource", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// List Syncs from Warehouse Returns the overview of syncs for every Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ListSyncsFromWarehouse200Response</returns>
        public ListSyncsFromWarehouse200Response ListSyncsFromWarehouse(string warehouseId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0)
        {
            Segment.PublicApi.Client.ApiResponse<ListSyncsFromWarehouse200Response> localVarResponse = ListSyncsFromWarehouseWithHttpInfo(warehouseId, pagination);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List Syncs from Warehouse Returns the overview of syncs for every Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ListSyncsFromWarehouse200Response</returns>
        public Segment.PublicApi.Client.ApiResponse<ListSyncsFromWarehouse200Response> ListSyncsFromWarehouseWithHttpInfo(string warehouseId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0)
        {
            // verify the required parameter 'warehouseId' is set
            if (warehouseId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'warehouseId' when calling SelectiveSyncApi->ListSyncsFromWarehouse");
            }

            Segment.PublicApi.Client.RequestOptions localVarRequestOptions = new Segment.PublicApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.segment.v1+json",
                "application/json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            var localVarContentType = Segment.PublicApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Segment.PublicApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Segment.PublicApi.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            if (pagination != null)
            {
                localVarRequestOptions.QueryParameters.Add(Segment.PublicApi.Client.ClientUtils.ParameterToMultiMap("", "pagination", pagination));
            }

            localVarRequestOptions.Operation = "SelectiveSyncApi.ListSyncsFromWarehouse";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ListSyncsFromWarehouse200Response>("/warehouses/{warehouseId}/syncs", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListSyncsFromWarehouse", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// List Syncs from Warehouse Returns the overview of syncs for every Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ListSyncsFromWarehouse200Response</returns>
        public async System.Threading.Tasks.Task<ListSyncsFromWarehouse200Response> ListSyncsFromWarehouseAsync(string warehouseId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Segment.PublicApi.Client.ApiResponse<ListSyncsFromWarehouse200Response> localVarResponse = await ListSyncsFromWarehouseWithHttpInfoAsync(warehouseId, pagination, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List Syncs from Warehouse Returns the overview of syncs for every Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ListSyncsFromWarehouse200Response)</returns>
        public async System.Threading.Tasks.Task<Segment.PublicApi.Client.ApiResponse<ListSyncsFromWarehouse200Response>> ListSyncsFromWarehouseWithHttpInfoAsync(string warehouseId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'warehouseId' is set
            if (warehouseId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'warehouseId' when calling SelectiveSyncApi->ListSyncsFromWarehouse");
            }


            Segment.PublicApi.Client.RequestOptions localVarRequestOptions = new Segment.PublicApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.segment.v1+json",
                "application/json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            var localVarContentType = Segment.PublicApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Segment.PublicApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Segment.PublicApi.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            if (pagination != null)
            {
                localVarRequestOptions.QueryParameters.Add(Segment.PublicApi.Client.ClientUtils.ParameterToMultiMap("", "pagination", pagination));
            }

            localVarRequestOptions.Operation = "SelectiveSyncApi.ListSyncsFromWarehouse";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ListSyncsFromWarehouse200Response>("/warehouses/{warehouseId}/syncs", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListSyncsFromWarehouse", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// List Syncs from Warehouse And Source Returns the overview of syncs for a Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ListSyncsFromWarehouseAndSource200Response</returns>
        public ListSyncsFromWarehouseAndSource200Response ListSyncsFromWarehouseAndSource(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0)
        {
            Segment.PublicApi.Client.ApiResponse<ListSyncsFromWarehouseAndSource200Response> localVarResponse = ListSyncsFromWarehouseAndSourceWithHttpInfo(warehouseId, sourceId, pagination);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List Syncs from Warehouse And Source Returns the overview of syncs for a Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ListSyncsFromWarehouseAndSource200Response</returns>
        public Segment.PublicApi.Client.ApiResponse<ListSyncsFromWarehouseAndSource200Response> ListSyncsFromWarehouseAndSourceWithHttpInfo(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0)
        {
            // verify the required parameter 'warehouseId' is set
            if (warehouseId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'warehouseId' when calling SelectiveSyncApi->ListSyncsFromWarehouseAndSource");
            }

            // verify the required parameter 'sourceId' is set
            if (sourceId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'sourceId' when calling SelectiveSyncApi->ListSyncsFromWarehouseAndSource");
            }

            Segment.PublicApi.Client.RequestOptions localVarRequestOptions = new Segment.PublicApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.segment.v1+json",
                "application/json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            var localVarContentType = Segment.PublicApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Segment.PublicApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Segment.PublicApi.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.PathParameters.Add("sourceId", Segment.PublicApi.Client.ClientUtils.ParameterToString(sourceId)); // path parameter
            if (pagination != null)
            {
                localVarRequestOptions.QueryParameters.Add(Segment.PublicApi.Client.ClientUtils.ParameterToMultiMap("", "pagination", pagination));
            }

            localVarRequestOptions.Operation = "SelectiveSyncApi.ListSyncsFromWarehouseAndSource";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ListSyncsFromWarehouseAndSource200Response>("/warehouses/{warehouseId}/connected-sources/{sourceId}/syncs", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListSyncsFromWarehouseAndSource", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// List Syncs from Warehouse And Source Returns the overview of syncs for a Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ListSyncsFromWarehouseAndSource200Response</returns>
        public async System.Threading.Tasks.Task<ListSyncsFromWarehouseAndSource200Response> ListSyncsFromWarehouseAndSourceAsync(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Segment.PublicApi.Client.ApiResponse<ListSyncsFromWarehouseAndSource200Response> localVarResponse = await ListSyncsFromWarehouseAndSourceWithHttpInfoAsync(warehouseId, sourceId, pagination, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List Syncs from Warehouse And Source Returns the overview of syncs for a Source connected to a Warehouse.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="sourceId"></param>
        /// <param name="pagination">Defines the pagination parameters.  This parameter exists in v1. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ListSyncsFromWarehouseAndSource200Response)</returns>
        public async System.Threading.Tasks.Task<Segment.PublicApi.Client.ApiResponse<ListSyncsFromWarehouseAndSource200Response>> ListSyncsFromWarehouseAndSourceWithHttpInfoAsync(string warehouseId, string sourceId, PaginationInput? pagination = default(PaginationInput?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'warehouseId' is set
            if (warehouseId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'warehouseId' when calling SelectiveSyncApi->ListSyncsFromWarehouseAndSource");
            }

            // verify the required parameter 'sourceId' is set
            if (sourceId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'sourceId' when calling SelectiveSyncApi->ListSyncsFromWarehouseAndSource");
            }


            Segment.PublicApi.Client.RequestOptions localVarRequestOptions = new Segment.PublicApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.segment.v1+json",
                "application/json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            var localVarContentType = Segment.PublicApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Segment.PublicApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Segment.PublicApi.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.PathParameters.Add("sourceId", Segment.PublicApi.Client.ClientUtils.ParameterToString(sourceId)); // path parameter
            if (pagination != null)
            {
                localVarRequestOptions.QueryParameters.Add(Segment.PublicApi.Client.ClientUtils.ParameterToMultiMap("", "pagination", pagination));
            }

            localVarRequestOptions.Operation = "SelectiveSyncApi.ListSyncsFromWarehouseAndSource";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ListSyncsFromWarehouseAndSource200Response>("/warehouses/{warehouseId}/connected-sources/{sourceId}/syncs", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListSyncsFromWarehouseAndSource", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Replace Advanced Sync Schedule for Warehouse Updates the advanced sync schedule for a Warehouse, replacing the sync schedule with a new schedule.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="replaceAdvancedSyncScheduleForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ReplaceAdvancedSyncScheduleForWarehouse200Response</returns>
        public ReplaceAdvancedSyncScheduleForWarehouse200Response ReplaceAdvancedSyncScheduleForWarehouse(string warehouseId, ReplaceAdvancedSyncScheduleForWarehouseV1Input replaceAdvancedSyncScheduleForWarehouseV1Input, int operationIndex = 0)
        {
            Segment.PublicApi.Client.ApiResponse<ReplaceAdvancedSyncScheduleForWarehouse200Response> localVarResponse = ReplaceAdvancedSyncScheduleForWarehouseWithHttpInfo(warehouseId, replaceAdvancedSyncScheduleForWarehouseV1Input);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Replace Advanced Sync Schedule for Warehouse Updates the advanced sync schedule for a Warehouse, replacing the sync schedule with a new schedule.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="replaceAdvancedSyncScheduleForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ReplaceAdvancedSyncScheduleForWarehouse200Response</returns>
        public Segment.PublicApi.Client.ApiResponse<ReplaceAdvancedSyncScheduleForWarehouse200Response> ReplaceAdvancedSyncScheduleForWarehouseWithHttpInfo(string warehouseId, ReplaceAdvancedSyncScheduleForWarehouseV1Input replaceAdvancedSyncScheduleForWarehouseV1Input, int operationIndex = 0)
        {
            // verify the required parameter 'warehouseId' is set
            if (warehouseId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'warehouseId' when calling SelectiveSyncApi->ReplaceAdvancedSyncScheduleForWarehouse");
            }

            // verify the required parameter 'replaceAdvancedSyncScheduleForWarehouseV1Input' is set
            if (replaceAdvancedSyncScheduleForWarehouseV1Input == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'replaceAdvancedSyncScheduleForWarehouseV1Input' when calling SelectiveSyncApi->ReplaceAdvancedSyncScheduleForWarehouse");
            }

            Segment.PublicApi.Client.RequestOptions localVarRequestOptions = new Segment.PublicApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json",
                "application/vnd.segment.v1+json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.segment.v1+json",
                "application/json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            var localVarContentType = Segment.PublicApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Segment.PublicApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Segment.PublicApi.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.Data = replaceAdvancedSyncScheduleForWarehouseV1Input;

            localVarRequestOptions.Operation = "SelectiveSyncApi.ReplaceAdvancedSyncScheduleForWarehouse";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Put<ReplaceAdvancedSyncScheduleForWarehouse200Response>("/warehouses/{warehouseId}/advanced-sync-schedule", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ReplaceAdvancedSyncScheduleForWarehouse", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Replace Advanced Sync Schedule for Warehouse Updates the advanced sync schedule for a Warehouse, replacing the sync schedule with a new schedule.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="replaceAdvancedSyncScheduleForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ReplaceAdvancedSyncScheduleForWarehouse200Response</returns>
        public async System.Threading.Tasks.Task<ReplaceAdvancedSyncScheduleForWarehouse200Response> ReplaceAdvancedSyncScheduleForWarehouseAsync(string warehouseId, ReplaceAdvancedSyncScheduleForWarehouseV1Input replaceAdvancedSyncScheduleForWarehouseV1Input, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Segment.PublicApi.Client.ApiResponse<ReplaceAdvancedSyncScheduleForWarehouse200Response> localVarResponse = await ReplaceAdvancedSyncScheduleForWarehouseWithHttpInfoAsync(warehouseId, replaceAdvancedSyncScheduleForWarehouseV1Input, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Replace Advanced Sync Schedule for Warehouse Updates the advanced sync schedule for a Warehouse, replacing the sync schedule with a new schedule.   The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="replaceAdvancedSyncScheduleForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ReplaceAdvancedSyncScheduleForWarehouse200Response)</returns>
        public async System.Threading.Tasks.Task<Segment.PublicApi.Client.ApiResponse<ReplaceAdvancedSyncScheduleForWarehouse200Response>> ReplaceAdvancedSyncScheduleForWarehouseWithHttpInfoAsync(string warehouseId, ReplaceAdvancedSyncScheduleForWarehouseV1Input replaceAdvancedSyncScheduleForWarehouseV1Input, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'warehouseId' is set
            if (warehouseId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'warehouseId' when calling SelectiveSyncApi->ReplaceAdvancedSyncScheduleForWarehouse");
            }

            // verify the required parameter 'replaceAdvancedSyncScheduleForWarehouseV1Input' is set
            if (replaceAdvancedSyncScheduleForWarehouseV1Input == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'replaceAdvancedSyncScheduleForWarehouseV1Input' when calling SelectiveSyncApi->ReplaceAdvancedSyncScheduleForWarehouse");
            }


            Segment.PublicApi.Client.RequestOptions localVarRequestOptions = new Segment.PublicApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json", 
                "application/vnd.segment.v1+json", 
                "application/vnd.segment.v1beta+json", 
                "application/vnd.segment.v1alpha+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.segment.v1+json",
                "application/json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            var localVarContentType = Segment.PublicApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Segment.PublicApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Segment.PublicApi.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.Data = replaceAdvancedSyncScheduleForWarehouseV1Input;

            localVarRequestOptions.Operation = "SelectiveSyncApi.ReplaceAdvancedSyncScheduleForWarehouse";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<ReplaceAdvancedSyncScheduleForWarehouse200Response>("/warehouses/{warehouseId}/advanced-sync-schedule", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ReplaceAdvancedSyncScheduleForWarehouse", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update Selective Sync for Warehouse Configures the schema for a Warehouse, including Sources, Collections, and Properties.    • When called, this endpoint may generate the &#x60;Storage Destination Modified&#x60; event in the [audit trail](/tag/Audit-Trail).          The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="updateSelectiveSyncForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>UpdateSelectiveSyncForWarehouse200Response</returns>
        public UpdateSelectiveSyncForWarehouse200Response UpdateSelectiveSyncForWarehouse(string warehouseId, UpdateSelectiveSyncForWarehouseV1Input updateSelectiveSyncForWarehouseV1Input, int operationIndex = 0)
        {
            Segment.PublicApi.Client.ApiResponse<UpdateSelectiveSyncForWarehouse200Response> localVarResponse = UpdateSelectiveSyncForWarehouseWithHttpInfo(warehouseId, updateSelectiveSyncForWarehouseV1Input);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update Selective Sync for Warehouse Configures the schema for a Warehouse, including Sources, Collections, and Properties.    • When called, this endpoint may generate the &#x60;Storage Destination Modified&#x60; event in the [audit trail](/tag/Audit-Trail).          The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="updateSelectiveSyncForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of UpdateSelectiveSyncForWarehouse200Response</returns>
        public Segment.PublicApi.Client.ApiResponse<UpdateSelectiveSyncForWarehouse200Response> UpdateSelectiveSyncForWarehouseWithHttpInfo(string warehouseId, UpdateSelectiveSyncForWarehouseV1Input updateSelectiveSyncForWarehouseV1Input, int operationIndex = 0)
        {
            // verify the required parameter 'warehouseId' is set
            if (warehouseId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'warehouseId' when calling SelectiveSyncApi->UpdateSelectiveSyncForWarehouse");
            }

            // verify the required parameter 'updateSelectiveSyncForWarehouseV1Input' is set
            if (updateSelectiveSyncForWarehouseV1Input == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'updateSelectiveSyncForWarehouseV1Input' when calling SelectiveSyncApi->UpdateSelectiveSyncForWarehouse");
            }

            Segment.PublicApi.Client.RequestOptions localVarRequestOptions = new Segment.PublicApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json",
                "application/vnd.segment.v1+json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.segment.v1+json",
                "application/json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            var localVarContentType = Segment.PublicApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Segment.PublicApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Segment.PublicApi.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.Data = updateSelectiveSyncForWarehouseV1Input;

            localVarRequestOptions.Operation = "SelectiveSyncApi.UpdateSelectiveSyncForWarehouse";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Patch<UpdateSelectiveSyncForWarehouse200Response>("/warehouses/{warehouseId}/selective-sync", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateSelectiveSyncForWarehouse", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update Selective Sync for Warehouse Configures the schema for a Warehouse, including Sources, Collections, and Properties.    • When called, this endpoint may generate the &#x60;Storage Destination Modified&#x60; event in the [audit trail](/tag/Audit-Trail).          The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="updateSelectiveSyncForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of UpdateSelectiveSyncForWarehouse200Response</returns>
        public async System.Threading.Tasks.Task<UpdateSelectiveSyncForWarehouse200Response> UpdateSelectiveSyncForWarehouseAsync(string warehouseId, UpdateSelectiveSyncForWarehouseV1Input updateSelectiveSyncForWarehouseV1Input, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Segment.PublicApi.Client.ApiResponse<UpdateSelectiveSyncForWarehouse200Response> localVarResponse = await UpdateSelectiveSyncForWarehouseWithHttpInfoAsync(warehouseId, updateSelectiveSyncForWarehouseV1Input, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update Selective Sync for Warehouse Configures the schema for a Warehouse, including Sources, Collections, and Properties.    • When called, this endpoint may generate the &#x60;Storage Destination Modified&#x60; event in the [audit trail](/tag/Audit-Trail).          The rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
        /// </summary>
        /// <exception cref="Segment.PublicApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId"></param>
        /// <param name="updateSelectiveSyncForWarehouseV1Input"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (UpdateSelectiveSyncForWarehouse200Response)</returns>
        public async System.Threading.Tasks.Task<Segment.PublicApi.Client.ApiResponse<UpdateSelectiveSyncForWarehouse200Response>> UpdateSelectiveSyncForWarehouseWithHttpInfoAsync(string warehouseId, UpdateSelectiveSyncForWarehouseV1Input updateSelectiveSyncForWarehouseV1Input, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'warehouseId' is set
            if (warehouseId == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'warehouseId' when calling SelectiveSyncApi->UpdateSelectiveSyncForWarehouse");
            }

            // verify the required parameter 'updateSelectiveSyncForWarehouseV1Input' is set
            if (updateSelectiveSyncForWarehouseV1Input == null)
            {
                throw new Segment.PublicApi.Client.ApiException(400, "Missing required parameter 'updateSelectiveSyncForWarehouseV1Input' when calling SelectiveSyncApi->UpdateSelectiveSyncForWarehouse");
            }


            Segment.PublicApi.Client.RequestOptions localVarRequestOptions = new Segment.PublicApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json", 
                "application/vnd.segment.v1+json", 
                "application/vnd.segment.v1beta+json", 
                "application/vnd.segment.v1alpha+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.segment.v1+json",
                "application/json",
                "application/vnd.segment.v1beta+json",
                "application/vnd.segment.v1alpha+json"
            };

            var localVarContentType = Segment.PublicApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Segment.PublicApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Segment.PublicApi.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.Data = updateSelectiveSyncForWarehouseV1Input;

            localVarRequestOptions.Operation = "SelectiveSyncApi.UpdateSelectiveSyncForWarehouse";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<UpdateSelectiveSyncForWarehouse200Response>("/warehouses/{warehouseId}/selective-sync", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateSelectiveSyncForWarehouse", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
